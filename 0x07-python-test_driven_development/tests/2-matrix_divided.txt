>>> matrix_divided = __import__('2-matrix_divided').matrix_divided


>>> matrix_divided([], 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[], []], 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([3, [1,2,3], [4, 5 ,6]], 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[3,6,9]], 3)
[[1.0, 2.0, 3.0]]

>>> matrix_divided([[1, 2, 3], [4 , 5 , 6], [12, 14 ,15]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0], [4.0, 4.67, 5.0]]


>>> matrix_divided([["ali", 3 ,6],[1,2,3]] , 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1,2,"ali"], [1,2,3]], 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1,2,3], [4,5,6,8]], 3)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[1,2,3,4], [4, 5, 6]], 3)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[1,2,3], [4, 5, 6]], "ali")
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided([[1, 2, 3], [4, 5,6]], 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

